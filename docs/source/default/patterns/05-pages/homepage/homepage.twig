{% embed "@templates/site-container.twig"
  with {
  menu_top: pattern_preview('menu', {}, 'top'),
  header_has_spacer: true,
  footer_menu: pattern_preview('menu', {}, 'footer'),
} %}

  {% block content %}
    {{ pattern_preview('hero') }}

    {{ pattern_preview('section_code', {
      bg: 'green-light',
      content: '<h2>1. Define your Design Tokens</h2><p>Everything starts with well defined Design Tokens. <br>
      Collect all your spaces colors typography from your design before you start coding components. Good Design Tokens are a big timesaver!</p>
        ',
      data: [
        {
          title: 'TailwindCSS',
          intro: '<p>TailwindCSS is the <b>API</b> for your design system. All tailwind.config.js settings are automaticly documented in Storybook. </p>',
          key: "tailwind",
          contents: [
          {
            key: 'colors',
            title: 'Colors',
            image_url: 'images/colors_export.png'
          },
        ],
          codes: [
          {
            key: 'yaml',
            title: 'tailwind.config.js',
            format: 'javascript',
            code_length: 31,
            code: "
module.exports = {
  ...
  theme: {
    colors: {
      red: colors.rose,
      teal: {
        200: '#e6fffa',
        300: '#b2f5ea',
        500: '#00ffd1',
      },
      purple: {
        200: '#faf5ff',
        500: '#8000ff',
      },
    },
    extend: {
      gridTemplateColumns: {
        '33/66': '33% 66%',
        '66/33': '66% 33%',
        '25/50/25': '25% 50% 25%',
        '25/75': '25% 75%',
      },
      fontFamily: {
        serif: ['SourceSerif', '-apple-system', 'BlinkMacSystemFont'],
        sans: ['Inter', 'Roboto', 'sans-serif'],
      },
    },
  };
"
          },
          {
            key: 'mdx',
            title: 'colors.mdx',
            format: 'javascript',
            code: '
import { Meta, ColorPalette, ColorItem, Subtitle } from \'@storybook/addon-docs/blocks\';
const tailwindConfig = require(\'../../config/silo/tailwind.json\');
const colors = tailwindConfig.tailwind.theme.colors;

&lt;Meta title="Tokens/Colors" /&gt;

# Colors Matter

## A palette of great-looking, well-balanced colors.
&lt;ColorPalette&gt;
  {
    Object.keys(colors).map((key)=>{
      const color = typeof colors[key] === \'string\' ? [colors[key]] : colors[key];
      const title = `.${key}`;
      return (
        &lt;ColorItem key={key} title={title} colors={color} /&gt;
      )
    })
  }
&lt;/ColorPalette&gt;
'
          }
        ],
        },
        {
          title: 'SCSS',
          key: "scss",
          intro: "Not every SCSS variable is a Design Token. Collect your Tokens in SCSS collections and export them. Wingsuit will document automaticly exported SCSS variables.",
          contents: [
          {
            key: 'colors',
            title: 'Colors',
            content: '
            <div>
            <img src="/images/colors_export.png">
            </div>
            '
          },
        ],
          codes: [
          {
            key: 'variables',
            title: 'variabels.scss',
            format: 'scss',
            code_length: 31,
            code: '
$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () !default;
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark
  ),
  $theme-colors
);

'
          },
          {
            key: 'mdx',
            title: 'colors.mdx',
            format: 'javascript',
            code: '
import { Meta, ColorPalette, ColorItem, Subtitle } from \'@storybook/addon-docs/blocks\';
const colors = require(\'tokens/exports/_colors.scss\');

&lt;Meta title="Tokens/Colors" /&gt;

# Colors Matter

## A palette of great-looking, well-balanced colors.
&lt;ColorPalette&gt;
  {
    Object.keys(colors).map((key)=>{
      const color = typeof colors[key] === \'string\' ? [colors[key]] : colors[key];
      const title = `.${key}`;
      return (
        &lt;ColorItem key={key} title={title} colors={color} /&gt;
      )
    })
  }
&lt;/ColorPalette&gt;
'
          }
        ],
        },
      ]
    }) }}


    {{ pattern_preview('section_code', {
      bg: 'purple-light',
      content: '<h2>2. Build your components</h2>
      <p> The wingsuit.yml has three main sections:<br>
      The <b>fields</b> which means the data from the cms,
      the <b>settings</b> which means a configuration setting like the color of the component and variants. Variants are a set of settings which changes the behavior of the component.
      </p>',
      data: [
        {
          title: 'Base',
          key: "base",
          intro: 'Fields and settings are editable with Storybook controls. Controls make it easy to see your component in every state.',
          contents: [
          {
            key: 'canvas',
            title: 'Canvas',
            content: '
            <div class="relative">
            <div class="code-block__feature absolute" style="right:0; top: 76%; height: 21%; width: 67.5%"
            :class="{\'code-block__feature--active\':$store.component_feature ==\'fields\'}"
            @click="$store.component_feature = \'fields\'"
            ></div>
            <div class="code-block__feature absolute" style="right:0; top: 61%; height: 12%; width: 67.5%"
            :class="{\'code-block__feature--active\':$store.component_feature ==\'settings\'}"
            @click="$store.component_feature = \'settings\'"
            ></div>
            <div class="code-block__feature absolute" style="top: 28%; height: 10%; width: 33.5%"
            :class="{\'code-block__feature--active\':$store.component_feature ==\'variants\'}"
            @click="$store.component_feature = \'variants\'"
            ></div>
            <img src="/images/component_avatar.png">
            </div>
            '
          },
        ],
          codes: [
          {
            key: 'yaml',
            title: 'avatar.wingsuit.yml',
            format: 'yaml',
            code_length: 31,
            code: 'use: "@molecules/avatar/avatar.twig"
label: Avatar
description: "An avatar represents an ...."
<div @click="$store.component_feature = \'fields\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'fields\'}">fields:
  image:
    type: pattern
    label: Image
    preview:
      id: placeholder
      variant: image
      settings:
        style: 1x1_xs_sc
  text:
    type: text
    label: Text
    preview:
      faker: lorem.paragraph</div><div @click="$store.component_feature = \'settings\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'settings\'}">settings:
  text_align:
    type: select
    label: Text align
    options:
      left: Left
      center: Center</div><div @click="$store.component_feature = \'variants\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'variants\'}">variants:
  default:
    label: Default
  horizontal:
    label: Horizontal</div>
'
          },
          {
            key: 'twig',
            title: 'avatar.twig',
            format: 'twig',
            code_length: 35,
            code: '{% set classes = [
  text_align == \'center\' ? \'text-center\',
  \'bg-gray-100 rounded-xl overflow-hidden p-8\',
  variant == \'horizontal\' ? \'flex flex-row\'
] %}

{% set image_classes = [
  \'relative overflow-hidden flex-none w-48\',<div @click="$store.component_feature = \'variants\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'variants\'}">variant == \'default\'? \'h-48 rounded-full mx-auto\',
variant == \'horizontal\' ? \'h-auto -m-8 mr-8\'</div>] %}

&lt;figure {{ attributes.addClass(classes) }} &gt;
  &lt;div {{ image_attributes.addClass(image_classes) }}&gt;<div @click="$store.component_feature = \'fields\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'fields\'}">     {{ image }}   </div>  &lt;/div&gt;
  &lt;div class="pt-6 space-y-4 flex-1"&gt;
    &lt;blockquote&gt;
      &lt;p class="text-lg font-semibold"&gt;<div @click="$store.component_feature = \'fields\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'fields\'}">        {{ text }}        </div>      &lt;/p&gt;
    &lt;/blockquote&gt;
    &lt;figcaption&gt;
      &lt;p class="text-teal-600"&gt;<div @click="$store.component_feature = \'fields\'" class=\'code-block__feature\' :class="{\'code-block__feature--active\':$store.component_feature ==\'fields\'}">        {{ full_name }}       </div>     &lt;/p&gt;
    &lt;/figcaption&gt;
  &lt;/div&gt;
&lt;/figure&gt;'
          }
        ],
        },
      ]
    }) }}


    {{ pattern_preview('section_code', {
      bg: 'blue-light',
      content: '<h2>3. Document your components</h2>',
      data: [
        {
          title: 'Automatic',
          key: "automatic",
          intro: 'Wingsuit provides Storybook DocBlocks as the building blocks to create full featured documentation right away from the wingsuit.yml.',
          contents: [
          {
            key: 'automatic',
            title: 'Automatic',
            content: '
              <img src="/images/docs_export.png">
            '
          },
        ],
          codes: [
          {
            key: 'yaml',
            title: 'avatar.wingsuit.yml',
            format: 'yaml',
            code: 'avatar:
  use: "@molecules/avatar/avatar.twig"
  label: Avatar
  description: "An avatar represent a user, and displays the profile picture."
  fields:
    image:
      type: pattern
      label: Image
      description: The profile picture.
      preview:
        id: placeholder
        variant: image
        settings:
          style: 1x1_xs_sc
    text:
      type: text
      label: Text
      description: A short description of the avatar.
      preview:
        faker: lorem.paragraph
    full_name:
      type: text
      label: Full name
      description: The full name of the profile.
      preview:
        faker: name.findName
    button:
      type: pattern
      label: Button
      description: Button with link to profile detail page.
      preview:
        id: button
        variant: default
        settings:
          expanded: true

  settings:
    text_align:
      type: select
      label: Text align
      description: Align the text of the avatar.
      options:
        left: Left
        center: Center

  variants:
    default:
      label: Default
      description: Show
    horizontal:
      label: Horizontal
      fields:
        image:
          id: placeholder
          variant: image
          settings:
            style: 1x2_xs_sc'
          },
        ],
        },
        {
          title: 'MDX',
          key: "mdx",
          intro: "You want to tell more about your component. With Wingsuit you can render your Twig component in your Storyboook MDX documentantion file.",
          contents: [
          {
            key: 'mdx',
            title: 'MDX',
            content: '
            <div class="relative">
              <img src="/images/docs_export.png">
            </div>
            '
          },
        ],
          codes: [
          {
            key: 'mdx',
            title: 'grid.mdx',
            format: 'jsx',
            code: 'import { Meta, Title, Subtitle } from \'@storybook/addon-docs/blocks\';
import { PatternLoad, PatternPreview } from \'@wingsuit-designsystem/pattern-react/server\';

&lt;PatternLoad patternId="grid"&gt;
  {(pattern) =&gt; (
  &lt;&gt;
    &lt;Title /&gt;
    &lt;Subtitle /&gt;

## Simple usage

```twig dark
  {% set cells = [
    \'Cell 1\',
    \'Cell 2\'
  ] %}
  {% include "@organisms/grid/grid.twig" with {
    attributes: create_attribute(),
    cells: cells,
    columns: 2,
    columns_width: \'equal\',
    gutter: \'default\'
  } only %}
`} /&gt;
```

## Cells
The pattern loops through a list of cells and print each cell.&lt;br/&gt;
To adjust the way the blocks are printed use twig blocks.

## Blocks
* cell_outer: &lt;br/&gt;Use block cell_outer to adjust the markup of each cell. Variables: `cell`, `cell_counter`.
* cell_inner:&lt;br/&gt;Use block cell_inner to print the cell variable. Variables: `cell`, `cell_counter`
### Example: cell_inner
```twig dark
  {% set cells = [
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;1&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;2&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;3&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;4&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;5&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;6&lt;/div&gt;\'},
      ] %}
      {% embed "@organisms/grid/grid.twig" with {
        attributes: create_attribute(),
        cells: cells,
        columns: 2,
        columns_width: \'equal\',
        gutter: \'default\'
      } only %}
        {% block cell_inner %}
          {{ cell.content }}
        {% endblock %}
      {% endembed %}
```

### Example: cell_outer
```twig dark
  {% set cells = [
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;1&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;2&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;3&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;4&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;5&lt;/div&gt;\'},
        {content: \'&lt;div class="w-full h-20 bg-primary"&gt;6&lt;/div&gt;\'},
      ] %}
      {% embed "@organisms/grid/grid.twig" with {
        attributes: create_attribute(),
        cells: cells,
        columns: 2,
        columns_width: \'equal\',
        gutter: \'default\'
      } only %}
      {% block cell_outer %}
        &lt;div&gt;
        {{ cell.content }} + { cell_counter }
        &lt;/div&gt;
      {% endblock %}
      {% endembed %}
```

## Column widths
The pattern comes with most common column widths configurations like 50x50 or 33x66.
If you need additional configuration you can extends the columns configuration inside the `grid.wingsuit.yml`.

```yaml dark
columns:
2: &lt;&lt; Columns count
  equal: \'grid-cols-1 md:grid-cols-2\' &lt;&lt; Column width 50x50
  \'66x33\': \'grid-cols-1 md:grid-cols-66/33\' &lt;&lt; Column width 66x33
  \'33x66\': \'grid-cols-1 md:grid-cols-33/66\' &lt;&lt; Column width 33x66
```

## Gutter
To configure the spacing between the columns use the gutter configuration in the grid.wingsuit.yml.
```yaml dark
  gutter:
    ...
    default: \'gap-4 md:gap-5 lg:gap-7\'
    ...
```

## Examples
### 4 equal columns.
```twig dark
  {% include "@organisms/grid/grid.twig" with {
    cells: cells,
    columns: 4,
    columns_width: \'equal\',
    gutter: \'default\'
  } only %}
```

&lt;PatternPreview variant={pattern.getDefaultVariant()} columns="4" config="equal"/&gt;

### 3 Columns with 25% 50% 25%.

```twig dark
 {% include "@organisms/grid/grid.twig" with {
   cells: cells,
   columns: 3,
   columns_width: \'25x50x25\',
   gutter: \'default\'
 } only %}
```

&lt;PatternPreview variant={pattern.getDefaultVariant()} columns="3" columns_width="25x50x25"/&gt;

  &lt;/&gt;
  )}
&lt;/PatternLoad&gt;
'
          },
        ],
        },
      ]
    }) }}

{% set presenter_code %}
  {% include "@molecules/code-block/code-block.twig" with {
    "codes": [
      {
        "key": "presenter",
        "format": "twig",
        "code": '{% set button %}
{% include "@atoms/button/button.twig" with {
  "text": "More"|t,
  "link": content.url
} %}
{% endset %}

{% include "@molecules/avatar/avatar.twig" with {
  "full_name": content.field_full_name,
  "text": content.body,
  "button": button
} %}'
      }
    ]
  } %}
{% endset %}
    {{ pattern_preview('section_code', {
      bg: 'blue-light',
      content: '<h2>4. Use your components in your CMS.</h2>',
      data: [
        {
          title: 'Drupal',
          key: "drupal",
          intro: '',
          contents: [
          {
            key: 'ui_patterns',
            title: 'UI Patterns',
            intro: '<p>With UI Patterns no code is needed.</p>',
            content: '
            <div class="relative">
              <img src="/images/docs_export.png">
            </div>
            '
          },
          {
            key: 'presenter',
            title: 'Presenter template',
            content: presenter_code,
            showCodeBlock: false,
          },
        ],
          codes: [],
        },
        {
          title: 'CraftCMS',
          key: "craftcms",
          intro: "",
          contents: [
          {
            key: 'mdx',
            title: 'MDX',
            content: '
            <div class="relative">
              <img src="/images/docs_export.png">
            </div>
            '
          },
        ],
          codes: [
          {
            key: 'mdx',
            title: 'grid.mdx',
            format: 'jsx',
            code: ''
          },
        ],
        },
      ]
    }) }}
  {% endblock %}

{% endembed %}
